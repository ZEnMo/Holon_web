# Generated by Django 4.1.3 on 2022-11-02 13:24

from django.db import migrations, models
import django.db.models.deletion
import main.blocks.holon_image_chooser
import main.blocks.storyline_section
import wagtail.blocks
import wagtail.embeds.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtail_headless_preview.models


class Migration(migrations.Migration):

    dependencies = [
        ("main", "0006_alter_storylinepage_scenario"),
    ]

    operations = [
        migrations.CreateModel(
            name="ScenariolistPage",
            fields=[
                (
                    "basepage_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="main.basepage",
                    ),
                ),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [
                            (
                                "scenario_block",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=True),
                                        ),
                                        (
                                            "description",
                                            wagtail.blocks.RichTextBlock(required=True),
                                        ),
                                        (
                                            "solarpanels_default",
                                            wagtail.blocks.IntegerBlock(
                                                help_text="Default amount of solarpanels",
                                                min_value=0,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "solarpanels_min",
                                            wagtail.blocks.IntegerBlock(
                                                help_text="Minimum amount of solarpanels",
                                                min_value=0,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "solarpanels_max",
                                            wagtail.blocks.IntegerBlock(
                                                help_text="Maximum amount of solarpanels",
                                                min_value=0,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "solarpanels_locked",
                                            wagtail.blocks.BooleanBlock(
                                                default=False,
                                                help_text="Show locked solarpanel slider",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "windmills_default",
                                            wagtail.blocks.IntegerBlock(
                                                help_text="Default amount of windmills",
                                                min_value=0,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "windmills_min",
                                            wagtail.blocks.IntegerBlock(
                                                help_text="Minimum amount of windmills",
                                                min_value=0,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "windmills_max",
                                            wagtail.blocks.IntegerBlock(
                                                help_text="Maximum amount of windmills",
                                                min_value=0,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "windmills_locked",
                                            wagtail.blocks.BooleanBlock(
                                                default=False,
                                                help_text="Show locked windmill slider",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "block_theme",
                                            wagtail.blocks.StructBlock(
                                                [
                                                    (
                                                        "select_theme",
                                                        wagtail.blocks.ChoiceBlock(
                                                            choices=[
                                                                (
                                                                    "",
                                                                    "White background",
                                                                ),
                                                                (
                                                                    "primary",
                                                                    "Purple brackground",
                                                                ),
                                                            ],
                                                            required=False,
                                                        ),
                                                    )
                                                ]
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "jumbotron_block",
                                wagtail.blocks.StructBlock(
                                    [("xxx", wagtail.blocks.CharBlock())]
                                ),
                            ),
                            (
                                "test123_block",
                                wagtail.blocks.StructBlock(
                                    [("test", wagtail.blocks.CharBlock())]
                                ),
                            ),
                        ],
                        blank=True,
                        null=True,
                        use_json_field=None,
                        verbose_name="Page body",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(
                wagtail_headless_preview.models.HeadlessPreviewMixin,
                "main.basepage",
            ),
        ),
        migrations.CreateModel(
            name="ScenarioPage",
            fields=[
                (
                    "basepage_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="main.basepage",
                    ),
                ),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [
                            (
                                "scenario_block",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "title",
                                            wagtail.blocks.CharBlock(required=True),
                                        ),
                                        (
                                            "description",
                                            wagtail.blocks.RichTextBlock(required=True),
                                        ),
                                        (
                                            "solarpanels_default",
                                            wagtail.blocks.IntegerBlock(
                                                help_text="Default amount of solarpanels",
                                                min_value=0,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "solarpanels_min",
                                            wagtail.blocks.IntegerBlock(
                                                help_text="Minimum amount of solarpanels",
                                                min_value=0,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "solarpanels_max",
                                            wagtail.blocks.IntegerBlock(
                                                help_text="Maximum amount of solarpanels",
                                                min_value=0,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "solarpanels_locked",
                                            wagtail.blocks.BooleanBlock(
                                                default=False,
                                                help_text="Show locked solarpanel slider",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "windmills_default",
                                            wagtail.blocks.IntegerBlock(
                                                help_text="Default amount of windmills",
                                                min_value=0,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "windmills_min",
                                            wagtail.blocks.IntegerBlock(
                                                help_text="Minimum amount of windmills",
                                                min_value=0,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "windmills_max",
                                            wagtail.blocks.IntegerBlock(
                                                help_text="Maximum amount of windmills",
                                                min_value=0,
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "windmills_locked",
                                            wagtail.blocks.BooleanBlock(
                                                default=False,
                                                help_text="Show locked windmill slider",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "block_theme",
                                            wagtail.blocks.StructBlock(
                                                [
                                                    (
                                                        "select_theme",
                                                        wagtail.blocks.ChoiceBlock(
                                                            choices=[
                                                                (
                                                                    "",
                                                                    "White background",
                                                                ),
                                                                (
                                                                    "primary",
                                                                    "Purple brackground",
                                                                ),
                                                            ],
                                                            required=False,
                                                        ),
                                                    )
                                                ]
                                            ),
                                        ),
                                    ]
                                ),
                            ),
                            (
                                "jumbotron_block",
                                wagtail.blocks.StructBlock(
                                    [("xxx", wagtail.blocks.CharBlock())]
                                ),
                            ),
                            (
                                "test123_block",
                                wagtail.blocks.StructBlock(
                                    [("test", wagtail.blocks.CharBlock())]
                                ),
                            ),
                        ],
                        blank=True,
                        null=True,
                        use_json_field=None,
                        verbose_name="Page body",
                    ),
                ),
                (
                    "scenariotitle",
                    models.CharField(
                        blank=True,
                        help_text="Scenario title",
                        max_length=100,
                        null=True,
                        verbose_name="scenariotitle",
                    ),
                ),
                (
                    "description",
                    wagtail.fields.RichTextField(
                        blank=True, null=True, verbose_name="Rich text"
                    ),
                ),
                (
                    "role",
                    models.TextField(
                        choices=[
                            ("Rijk", "Rijk"),
                            ("Provincie", "Provincie"),
                            ("Gemeente", "Gemeente"),
                        ],
                        default="Rijk",
                        max_length=25,
                    ),
                ),
                (
                    "informationtype",
                    models.TextField(
                        choices=[
                            ("Wiki", "Wiki"),
                            ("Stories", "Stories"),
                            ("Challenges", "Challenges"),
                        ],
                        default="Wiki",
                        max_length=25,
                    ),
                ),
            ],
            options={
                "verbose_name": "Scenario",
            },
            bases=(
                wagtail_headless_preview.models.HeadlessPreviewMixin,
                "main.basepage",
            ),
        ),
        migrations.AlterField(
            model_name="storylinepage",
            name="storyline",
            field=wagtail.fields.StreamField(
                [
                    (
                        "text_and_media",
                        wagtail.blocks.StructBlock(
                            [
                                (
                                    "text",
                                    wagtail.blocks.RichTextBlock(
                                        help_text="Add your text",
                                        required=True,
                                        rows=15,
                                    ),
                                ),
                                (
                                    "media",
                                    wagtail.blocks.StreamBlock(
                                        [
                                            (
                                                "image",
                                                wagtail.images.blocks.ImageChooserBlock(
                                                    required=False
                                                ),
                                            ),
                                            (
                                                "video",
                                                wagtail.embeds.blocks.EmbedBlock(
                                                    required=False
                                                ),
                                            ),
                                        ],
                                        help_text="Choose an image or paste an embed url",
                                        max_num=1,
                                    ),
                                ),
                                (
                                    "grid_layout",
                                    wagtail.blocks.ChoiceBlock(
                                        choices=[
                                            ("25_75", "25% - 75%"),
                                            ("50_50", "50% - 50%"),
                                            ("75_25", "75% - 25%"),
                                        ]
                                    ),
                                ),
                            ]
                        ),
                    ),
                    (
                        "section",
                        wagtail.blocks.StructBlock(
                            [
                                (
                                    "content",
                                    wagtail.blocks.StreamBlock(
                                        [
                                            ("text", wagtail.blocks.RichTextBlock()),
                                            (
                                                "slider",
                                                wagtail.blocks.StructBlock(
                                                    [
                                                        (
                                                            "slider",
                                                            wagtail.blocks.ChoiceBlock(
                                                                choices=main.blocks.storyline_section.get_sliders
                                                            ),
                                                        ),
                                                        (
                                                            "visible",
                                                            wagtail.blocks.BooleanBlock(
                                                                required=False
                                                            ),
                                                        ),
                                                        (
                                                            "locked",
                                                            wagtail.blocks.BooleanBlock(
                                                                required=False
                                                            ),
                                                        ),
                                                    ]
                                                ),
                                            ),
                                            (
                                                "static_image",
                                                main.blocks.holon_image_chooser.HolonImageChooserBlock(
                                                    required=False
                                                ),
                                            ),
                                            (
                                                "animation",
                                                wagtail.blocks.ChoiceBlock(
                                                    choices=[
                                                        (
                                                            "animation1",
                                                            "Animatie 1 (Test)",
                                                        ),
                                                        (
                                                            "solar_and_windmills",
                                                            "Solarpanels and windmills",
                                                        ),
                                                        (
                                                            "animation1",
                                                            "Animatie 3 (Test)",
                                                        ),
                                                    ],
                                                    required=False,
                                                ),
                                            ),
                                        ]
                                    ),
                                )
                            ]
                        ),
                    ),
                ],
                use_json_field=True,
            ),
        ),
    ]
