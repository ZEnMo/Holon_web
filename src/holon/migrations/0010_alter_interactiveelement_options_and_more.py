# Generated by Django 4.1.6 on 2023-03-01 07:51

from django.db import migrations, models
from django.db.migrations.operations.models import ModelOptionOperation
import django.db.models.deletion
import modelcluster.fields
from ..models.filter import Filter


class RemoveModelBasesOptions(ModelOptionOperation):
    def __init__(self, name):
        super().__init__(name)

    def deconstruct(self):
        kwargs = {
            "name": self.name,
        }
        return (self.__class__.__qualname__, [], kwargs)

    def state_forwards(self, app_label, state):
        model_state = state.models[app_label, self.name_lower]
        model_state.bases = (Filter,)
        state.reload_model(app_label, self.name_lower, delay=True)

    def database_forwards(self, app_label, schema_editor, from_state, to_state):
        pass

    def database_backwards(self, app_label, schema_editor, from_state, to_state):
        pass

    def describe(self):
        return "Remove bases from the model %s" % self.name

    @property
    def migration_name_fragment(self):
        return "remove_%s_bases" % self.name_lower


class Migration(migrations.Migration):

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("holon", "0009_ruleaction_alter_factor_rule_ruleactionaddremove_and_more"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="interactiveelement",
            options={"verbose_name": "Interactive Element"},
        ),
        migrations.RemoveField(
            model_name="relationattributefilter",
            name="attributefilter_ptr",
        ),
        migrations.RemoveField(
            model_name="ruleaction",
            name="rule",
        ),
        RemoveModelBasesOptions("relationattributefilter"),
        migrations.AddField(
            model_name="relationattributefilter",
            name="comparator",
            field=models.CharField(
                choices=[
                    ("EQUAL", "Equal"),
                    ("LESS THAN", "Less Than"),
                    ("GREATER THAN", "Greater Than"),
                    ("NOT EQUAL", "Not Equal"),
                ],
                max_length=255,
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="relationattributefilter",
            name="id",
            field=models.BigAutoField(
                auto_created=True,
                primary_key=True,
                serialize=False,
                verbose_name="ID",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="relationattributefilter",
            name="model_attribute",
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="relationattributefilter",
            name="polymorphic_ctype",
            field=models.ForeignKey(
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="polymorphic_%(app_label)s.%(class)s_set+",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="relationattributefilter",
            name="rule",
            field=modelcluster.fields.ParentalKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="relation_attribute_filters",
                to="holon.scenariorule",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="relationattributefilter",
            name="value",
            field=models.JSONField(),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="ruleactionaddremove",
            name="rule",
            field=modelcluster.fields.ParentalKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="discrete_factors_addremove",
                to="holon.scenariorule",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="ruleactionbalancegroup",
            name="rule",
            field=modelcluster.fields.ParentalKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="discrete_factors_balancegroup",
                to="holon.scenariorule",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="ruleactionchangeattribute",
            name="rule",
            field=modelcluster.fields.ParentalKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="discrete_factors_attribute",
                to="holon.scenariorule",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="ruleactionfactor",
            name="rule",
            field=modelcluster.fields.ParentalKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="continuous_factors",
                to="holon.scenariorule",
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="attributefilter",
            name="rule",
            field=modelcluster.fields.ParentalKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="attribute_filters",
                to="holon.scenariorule",
            ),
        ),
        migrations.AlterField(
            model_name="scenariorule",
            name="interactive_element",
            field=modelcluster.fields.ParentalKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="rules",
                to="holon.interactiveelement",
            ),
        ),
    ]
