# Generated by Django 4.1.7 on 2023-03-02 20:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("holon", "0012_actor_wildcard_json_contract_wildcard_json_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="ConnectionContract",
            fields=[
                (
                    "contract_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="holon.contract",
                    ),
                ),
                (
                    "connectionContractType",
                    models.CharField(
                        choices=[("DEFAULT", "Default"), ("NFATO", "Nfato")],
                        max_length=255,
                    ),
                ),
                ("nfATO_capacity_kW", models.FloatField()),
                ("nfATO_starttime_h", models.FloatField()),
                ("nfATO_endtime_h", models.FloatField()),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("holon.contract",),
        ),
        migrations.CreateModel(
            name="CookingConversionAsset",
            fields=[
                (
                    "energyasset_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="holon.energyasset",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("ELECTRIC_HOB", "Electric Hob"),
                            ("GAS_PIT", "Gas Pit"),
                        ],
                        max_length=255,
                    ),
                ),
                ("capacityHeat_kW", models.FloatField(blank=True, null=True)),
                ("capacityElectricity_kW", models.FloatField(blank=True, null=True)),
                ("eta_r", models.FloatField()),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("holon.energyasset",),
        ),
        migrations.CreateModel(
            name="DeliveryContract",
            fields=[
                (
                    "contract_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="holon.contract",
                    ),
                ),
                (
                    "deliveryContractType",
                    models.CharField(
                        choices=[
                            ("ELECTRICITY_FIXED", "Fixed"),
                            ("ELECTRICITY_VARIABLE", "Variable"),
                        ],
                        max_length=255,
                    ),
                ),
                ("deliveryPrice_eurpkWh", models.FloatField()),
                ("feedinPrice_eurpkWh", models.FloatField()),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("holon.contract",),
        ),
        migrations.CreateModel(
            name="DieselVehicleAsset",
            fields=[
                (
                    "consumptionasset_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="holon.consumptionasset",
                    ),
                ),
                ("energyConsumption_kWhpkm", models.FloatField()),
                ("vehicleScaling", models.IntegerField()),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("holon.consumptionasset",),
        ),
        migrations.CreateModel(
            name="TaxContract",
            fields=[
                (
                    "contract_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="holon.contract",
                    ),
                ),
                (
                    "taxContractType",
                    models.CharField(
                        choices=[
                            ("SALDEREN", "Salderen"),
                            ("NIETSALDEREN", "Nietsalderen"),
                        ],
                        max_length=255,
                    ),
                ),
                ("taxDelivery_eurpkWh", models.FloatField()),
                ("taxFeedin_eurpkWh", models.FloatField()),
                ("proportionalTax_pct", models.FloatField()),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("holon.contract",),
        ),
        migrations.CreateModel(
            name="TransportContract",
            fields=[
                (
                    "contract_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="holon.contract",
                    ),
                ),
                (
                    "transportContractType",
                    models.CharField(
                        choices=[
                            ("DEFAULT", "Default"),
                            ("NODALPRICING", "Nodalpricing"),
                            ("BANDWIDTH", "Bandwidth"),
                        ],
                        max_length=255,
                    ),
                ),
                ("bandwidthTreshold_kW", models.FloatField()),
                ("bandwidthTariff_eurpkWh", models.FloatField()),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("holon.contract",),
        ),
        migrations.RenameField(
            model_name="contract",
            old_name="contract_scope",
            new_name="contractScope",
        ),
        migrations.RemoveField(
            model_name="contract",
            name="type",
        ),
        migrations.AddField(
            model_name="contract",
            name="annualFee_eur",
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name="contract",
            name="contractType",
            field=models.CharField(
                choices=[
                    ("DELIVERY", "Delivery"),
                    ("TRANSPORT", "Transport"),
                    ("CONNECTION", "Connection"),
                    ("TAX", "Tax"),
                ],
                default="DELIVERY",
                max_length=255,
            ),
        ),
        migrations.AddField(
            model_name="contract",
            name="energyCarrier",
            field=models.CharField(
                choices=[
                    ("ELECTRICITY", "Electricity"),
                    ("HEAT", "Heat"),
                    ("METHANE", "Methane"),
                    ("HYDROGEN", "Hydrogen"),
                    ("DIESEL", "Diesel"),
                ],
                default="ELECTRICITY",
                max_length=255,
            ),
        ),
        migrations.AddField(
            model_name="heatproductionasset",
            name="deliveryTemp_degC",
            field=models.FloatField(default=80),
        ),
        migrations.AddField(
            model_name="heatstorageasset",
            name="initialTemperature_degC",
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="housegridconnection",
            name="pricelevelHighDifFromAvg_eurpkWh",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="housegridconnection",
            name="pricelevelLowDifFromAvg_eurpkWh",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="housegridconnection",
            name="smart_assets",
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="housegridconnection",
            name="tempSetpointDay_degC",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="housegridconnection",
            name="tempSetpointDay_start_hr",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="housegridconnection",
            name="tempSetpointNight_degC",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="housegridconnection",
            name="tempSetpointNight_start_hr",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="buildinggridconnection",
            name="type",
            field=models.CharField(
                choices=[
                    ("STORE", "Store"),
                    ("OFFICE", "Office"),
                    ("LOGISTICS", "Logistics"),
                ],
                max_length=100,
            ),
        ),
        migrations.AlterField(
            model_name="builtenvironmentgridconnection",
            name="heating_type",
            field=models.CharField(
                choices=[
                    ("GASBURNER", "Gasburner"),
                    ("GASFIRED", "Gasfired"),
                    ("HEATPUMP_GASPEAK", "Heatpump Gaspeak"),
                    ("DISTRICTHEAT", "Districtheat"),
                    ("HEATPUMP_BOILERPEAK", "Heatpump Boilerpeak"),
                    ("HYDROGENFIRED", "Hydrogenfired"),
                    ("GASFIRED_CHPPEAK", "Gasfired Chppeak"),
                    ("LT_RESIDUAL_HEATPUMP_GASPEAK", "Lt Residual Heatpump Gaspeak"),
                    ("NONE", "None"),
                ],
                max_length=100,
            ),
        ),
        migrations.AlterField(
            model_name="consumptionasset",
            name="type",
            field=models.CharField(
                choices=[
                    ("ELECTRICITY_DEMAND", "Electricity Demand"),
                    ("HEAT_DEMAND", "Heat Demand"),
                    ("HOT_WATER_CONSUMPTION", "Hot Water Consumption"),
                    ("OTHER_ELECTRICITY_CONSUMPTION", "Other Electricity Consumption"),
                    ("DIESEL_VEHICLE", "Diesel Vehicle"),
                ],
                max_length=255,
            ),
        ),
        migrations.AlterField(
            model_name="conversionasset",
            name="type",
            field=models.CharField(
                choices=[
                    ("ELECTRIC_HEATER", "Electric Heater"),
                    ("GAS_BURNER", "Gas Burner"),
                    ("HEAT_DELIVERY_SET", "Heat Delivery Set"),
                    ("HEAT_PUMP_AIR", "Heat Pump Air"),
                    ("HEAT_PUMP_GROUND", "Heat Pump Ground"),
                    ("HEAT_PUMP_WATER", "Heat Pump Water"),
                    ("HYDROGEN_FURNACE", "Hydrogen Furnace"),
                    ("METHANE_FURNACE", "Methane Furnace"),
                    ("ELECTROLYSER", "Electrolyser"),
                    ("CURTAILER", "Curtailer"),
                    ("METHANE_CHP", "Methane Chp"),
                ],
                max_length=255,
            ),
        ),
        migrations.AlterField(
            model_name="districtheatinggridconnection",
            name="type",
            field=models.CharField(
                choices=[("MT", "Mt"), ("HT", "Ht"), ("LT", "Lt")], max_length=2
            ),
        ),
        migrations.AlterField(
            model_name="gridconnection",
            name="charging_mode",
            field=models.CharField(
                blank=True,
                choices=[
                    ("MAX_POWER", "Max Power"),
                    ("MAX_SPREAD", "Max Spread"),
                    ("CHEAP", "Cheap"),
                    ("SIMPLE", "Simple"),
                ],
                max_length=100,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="heatgridnode",
            name="type",
            field=models.CharField(
                choices=[("MT", "Mt"), ("HT", "Ht"), ("LT", "Lt")], max_length=2
            ),
        ),
        migrations.AlterField(
            model_name="heatstorageasset",
            name="ambientTempType",
            field=models.CharField(
                blank=True,
                choices=[("AIR", "Air"), ("GROUND", "Ground"), ("WATER", "Water")],
                max_length=100,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="heatstorageasset",
            name="setTemp_degC",
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="housegridconnection",
            name="type",
            field=models.CharField(
                choices=[
                    ("SEMIDETACHED", "Semidetached"),
                    ("TERRACED", "Terraced"),
                    ("DETACHED", "Detached"),
                    ("HIGHRISE", "Highrise"),
                ],
                max_length=100,
            ),
        ),
        migrations.AlterField(
            model_name="hybridheatcoversionasset",
            name="ambientTempType",
            field=models.CharField(
                choices=[("AIR", "Air"), ("GROUND", "Ground"), ("WATER", "Water")],
                max_length=255,
            ),
        ),
        migrations.AlterField(
            model_name="industrygridconnection",
            name="type",
            field=models.CharField(
                choices=[("STEEL", "Steel"), ("INDUSTRY_OTHER", "Industry Other")],
                max_length=25,
            ),
        ),
        migrations.AlterField(
            model_name="productionasset",
            name="type",
            field=models.CharField(
                choices=[
                    ("PHOTOVOLTAIC", "Photovoltaic"),
                    ("WINDMILL", "Windmill"),
                    ("RESIDUALHEATHT", "Residualheatht"),
                    ("RESIDUALHEATLT", "Residualheatlt"),
                ],
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="productiongridconnection",
            name="category",
            field=models.CharField(
                choices=[
                    ("WINDFARM", "Windfarm"),
                    ("SOLARFARM", "Solarfarm"),
                    ("GRIDBATTERY", "Gridbattery"),
                    ("RESIDUALHEAT", "Residualheat"),
                ],
                max_length=25,
            ),
        ),
        migrations.AlterField(
            model_name="storageasset",
            name="type",
            field=models.CharField(
                choices=[
                    ("ELECTRIC_VEHICLE", "Electric Vehicle"),
                    ("STORAGE_ELECTRIC", "Storage Electric"),
                    ("STORAGE_HEAT", "Storage Heat"),
                    ("HEATMODEL", "Heatmodel"),
                ],
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="transportheatconversionasset",
            name="ambientTempType",
            field=models.CharField(
                choices=[("AIR", "Air"), ("GROUND", "Ground"), ("WATER", "Water")],
                max_length=255,
            ),
        ),
        migrations.AlterField(
            model_name="utilitygridconnection",
            name="heating_type",
            field=models.CharField(
                choices=[
                    ("GASBURNER", "Gasburner"),
                    ("GASFIRED", "Gasfired"),
                    ("HEATPUMP_GASPEAK", "Heatpump Gaspeak"),
                    ("DISTRICTHEAT", "Districtheat"),
                    ("HEATPUMP_BOILERPEAK", "Heatpump Boilerpeak"),
                    ("HYDROGENFIRED", "Hydrogenfired"),
                    ("GASFIRED_CHPPEAK", "Gasfired Chppeak"),
                    ("LT_RESIDUAL_HEATPUMP_GASPEAK", "Lt Residual Heatpump Gaspeak"),
                    ("NONE", "None"),
                ],
                max_length=100,
            ),
        ),
    ]
