server {
    listen 80 default_server;
    listen [::]:80 default_server;
    proxy_connect_timeout       120s; # time to open a connection to the proxy before we give up
    proxy_send_timeout          120s; # timeout for transmitting a request to the proxied server
    proxy_read_timeout          120s; # timeout for reading a response from the proxied server - did it send back anything before this has expired
    send_timeout                120s; # timeout for sending a response to the requesting client - note this isn't proxy_send_timeout, but the time between two successive write operations to the requesting client (ie. browser)
    reset_timedout_connection on;

    server_name holontool.nl _;

    client_max_body_size 128M;

    gzip on;
    gzip_proxied any;
    gzip_types text/plain text/xml text/css application/x-javascript;
    gzip_vary on;
    gzip_disable “MSIE [1-6]\.(?!.*SV1)”;

    sendfile on;
    sendfile_max_chunk 512k;

    root /app/src;

    access_log off;

    error_page 502 /502.html;
    location /502.html {
        root /app;
    }

    location /wt/media  {
        alias /app/media;
    }

    # If you instead want to use images from a remote domain - uncomment this
    # location /wt/media {
    #     try_files $uri @fallback;
    # }
    #
    # location @fallback {
    #     resolver 1.1.1.1;
    #     rewrite "^/wt/media/(.*)$" "https://${MEDIA_REMOTE_DOMAIN}/wt/media/$1" redirect;
    # }

    location /wt/static/ {
        expires 30d;
        autoindex off;
        alias /app/static/;
    }

    location / {
        proxy_set_header Host $host:8000;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass ${NEXT_HOST}:3000;
    }

    location /_next/webpack-hmr {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass ${NEXT_HOST}:3000/_next/webpack-hmr;
    }

    location /_util {
        proxy_set_header Host $host:8000;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass ${PYTHON_HOST}:8000/wt;
    }

    location /wt {
        proxy_set_header Host $host:8000;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass ${PYTHON_HOST}:8000/wt;
    }
}
